#lang racket

(define (p) (p))
(define (test x y)
  (if (= x 0) 0 y))

(test 0 (p))

; 適用順序評価
;; 「引数を評価してから適用する」
; 正規順序評価
;; 「完全に展開してから簡約する」
;; 最後まで展開されるまで、それぞれの要素は評価されないってことかな？

; 適用順序評価の場合
;; 適用順序評価の場合、まずはじめに引数を評価するので、
;; (p)を評価しようとして無限ループに陥る

; 正規順序評価の場合
;; 定義されている関数などを展開していき、
;; 最後まで展開されてから引数を評価するので、
;; 下記のような流れになる。
; (test 0 (p))
; (if (= x 0) 0 y)
; (if (= 0 0) 0 (p))
; (if (0) 0 (p))
; (0)
; なので0を返す
